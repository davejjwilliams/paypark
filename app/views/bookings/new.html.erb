<div class="has-text-centered">
  <h1 class="title">New Booking</h1>
  <h2 class="subtitle"><%= @homeowner.address %></h2> <br>
</div>


<div class="columns is-gapless">
  <div class="column">
    <div onload="init()">
    <div id="scheduler_here" style='width:100%; height:500px;' class="dhx_cal_container is-paddingless">
      <div class="dhx_cal_navline">
        <div class="dhx_cal_prev_button">&nbsp;</div>
        <div class="dhx_cal_next_button">&nbsp;</div>
        <div class="dhx_cal_today_button"></div>
        <div class="dhx_cal_date"></div>
        <div class="dhx_cal_tab" name="day_tab" style="right:204px;"></div>
        <div class="dhx_cal_tab" name="week_tab" style="right:140px;"></div>
        <div class="dhx_cal_tab" name="month_tab" style="right:76px;"></div>
      </div>
      <div class="dhx_cal_header">
      </div>
      <div class="dhx_cal_data">
      </div>
    </div>
    </div>
  </div>
  <div class="column has-text-centered">
    <h2 class="subtitle">Available between <%= @homeowner.active_start %>
      and <%= @homeowner.active_end %></h2>
    <h2 class="subtitle">Price Per Hour: <%= number_to_currency(@homeowner.driveway_price, unit: "£") %></h2>
    <% if @homeowner.number_ratings > 0 %>
      <h2 class="subtitle">Average Rating: <%= (@homeowner.total_ratings.to_f / @homeowner.number_ratings).round(2) %>
        /5</h2>
    <% else %>
      <h2 class="subtitle">No Ratings Yet</h2>
    <% end %>
    <%= render 'form', booking: @booking %>
  </div>
</div>

<script>
    scheduler.setImagePath();
    scheduler.config.readonly = true;
    scheduler.config.xml_date = "%Y-%m-%d %H:%i";
    scheduler.init("scheduler_here", new Date(), "week");
    scheduler.load("<%= data_path %>/", "json");

    var dp = new dataProcessor("<%= data_path %>/");
    dp.init(scheduler);
    dp.setTransactionMode("REST");

    function init() {
        var compactView = {
            xy: {
                nav_height: 80
            },
            config: {
                header: {
                    rows: [
                        {
                            cols: [
                                "prev",
                                "date",
                                "next",
                            ]
                        },
                        {
                            cols: [
                                "day",
                                "week",
                                "spacer",
                                "today"
                            ]
                        }
                    ]
                }
            },
            templates: {
                month_scale_date: scheduler.date.date_to_str("%D"),
                week_scale_date: scheduler.date.date_to_str("%D, %j"),
                event_bar_date: function (start, end, ev) {
                    return "";
                }

            }
        };
        var fullView = {
            xy: {
                nav_height: 80
            },
            config: {
                header: [
                    "day",
                    "week",
                    "date",
                    "prev",
                    "today",
                    "next"
                ]
            },
            templates: {
                month_scale_date: scheduler.date.date_to_str("%l"),
                week_scale_date: scheduler.date.date_to_str("%l, %F %j"),
                event_bar_date: function (start, end, ev) {
                    return "• <b>" + scheduler.templates.event_date(start) + "</b> ";
                }
            }
        };

        function resetConfig() {
            var settings;
            if (window.innerWidth < 1000) {
                settings = compactView;
            } else {
                settings = fullView;

            }
            scheduler.utils.mixin(scheduler.config, settings.config, true);
            scheduler.utils.mixin(scheduler.templates, settings.templates, true);
            scheduler.utils.mixin(scheduler.xy, settings.xy, true);
            return true;
        }

        scheduler.config.responsive_lightbox = true;
        resetConfig();
        scheduler.attachEvent("onBeforeViewChange", resetConfig);
        scheduler.attachEvent("onSchedulerResize", resetConfig);

        scheduler.config.multi_day = true;

        scheduler.config.xml_date = "%Y-%m-%d %H:%i";
        scheduler.init("scheduler_here", new Date(), "week");
        scheduler.load("<%= data_path %>/", "json");

        var dp = new dataProcessor("<%= data_path %>/");
        dp.init(scheduler);
        dp.setTransactionMode("REST");
        document.querySelector(".add_event_button").addEventListener("click", function () {
            scheduler.addEventNow();
        });
    }

    $(function(){
        $('div[onload]').trigger('onload');
    });
</script>
